; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\main.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\main.d --cpu=Cortex-M0 --apcs=interwork -O1 --diag_suppress=9931 -I.\APP -I.\APP\TN2115s_libs -I.\Common\CMSIS-FreeRTOS\10.0.1\Source\include -I.\Common\RTE\RTOS -I.\Common\CMSIS-FreeRTOS\10.0.1\CMSIS\RTOS2\FreeRTOS\Include -I.\Common\CMSIS-FreeRTOS\10.0.1\Source\portable\RVDS\ARM_CM0 -I.\APP\EINK -I.\Device_desc -I.\Common\CMSIS-FreeRTOS\10.0.1\Source -I.\Common\RTE\Device\ARMCM0 -I.\RTE\_soc_m0 -IC:\Users\bbb\AppData\Local\Arm\Packs\ARM\CMSIS\5.6.0\CMSIS\Core\Include -IC:\Users\bbb\AppData\Local\Arm\Packs\ARM\CMSIS\5.6.0\Device\ARM\ARMCM0\Include -D__MICROLIB -D__UVISION_VERSION=529 -D_RTE_ -DARMCM0 --omf_browse=.\objects\main.crf APP\main.c]
                          THUMB

                          AREA RW_IRAM1, CODE, READONLY, ALIGN=1

                  NFC_FIELD_OFF_Callback PROC
;;;89     
;;;90     __attribute__((section("RW_IRAM1"))) void NFC_FIELD_OFF_Callback()
000000  4770              BX       lr
;;;91     {
;;;92     
;;;93     
;;;94     }	
;;;95     
                          ENDP


                          AREA ||i.I2C_SLV_RD_DONE_Callback||, CODE, READONLY, ALIGN=1

                  I2C_SLV_RD_DONE_Callback PROC
;;;105    
;;;106    void 			I2C_SLV_RD_DONE_Callback(I2C_RTX * i2c_rtx)
000000  4770              BX       lr
;;;107    {
;;;108    	
;;;109    }
;;;110    
                          ENDP


                          AREA ||i.I2C_SLV_RD_RQST_Callback||, CODE, READONLY, ALIGN=1

                  I2C_SLV_RD_RQST_Callback PROC
;;;95     
;;;96     bool 			I2C_SLV_RD_RQST_Callback(I2C_RTX * i2c_rtx)
000000  2000              MOVS     r0,#0
;;;97     {
;;;98     	return false;
;;;99     }
000002  4770              BX       lr
;;;100    
                          ENDP


                          AREA ||i.I2C_SLV_WR_DONE_Callback||, CODE, READONLY, ALIGN=1

                  I2C_SLV_WR_DONE_Callback PROC
;;;100    
;;;101    void 			I2C_SLV_WR_DONE_Callback(I2C_RTX * i2c_rtx)
000000  4770              BX       lr
;;;102    {
;;;103    	
;;;104    }	
;;;105    
                          ENDP


                          AREA ||i.NFC_FIELD_ON_Callback||, CODE, READONLY, ALIGN=1

                  NFC_FIELD_ON_Callback PROC
;;;84     
;;;85     void NFC_FIELD_ON_Callback()
000000  4770              BX       lr
;;;86     {
;;;87     
;;;88     }	
;;;89     
                          ENDP


                          AREA ||i.NFC_RX_Callback||, CODE, READONLY, ALIGN=2

                  NFC_RX_Callback PROC
;;;69     
;;;70     void NFC_RX_Callback()																															
000000  b510              PUSH     {r4,lr}
;;;71     {
;;;72     	if (NFC_Passthrough_RX(nfc_rx_buf))																								
000002  4807              LDR      r0,|L6.32|
000004  f7fffffe          BL       NFC_Passthrough_RX
000008  2800              CMP      r0,#0
00000a  d007              BEQ      |L6.28|
;;;73     	{
;;;74     		nfc_tx_buf[0] = 0x00;                                                        
00000c  4804              LDR      r0,|L6.32|
00000e  2100              MOVS     r1,#0
000010  3080              ADDS     r0,r0,#0x80
000012  7001              STRB     r1,[r0,#0]
;;;75     		nfc_tx_buf[1] = 0x00;	
000014  7041              STRB     r1,[r0,#1]
;;;76     		NFC_Passthrough_TX(nfc_tx_buf, 2);
000016  2102              MOVS     r1,#2
000018  f7fffffe          BL       NFC_Passthrough_TX
                  |L6.28|
;;;77     	}	
;;;78     }
00001c  bd10              POP      {r4,pc}
;;;79     	
                          ENDP

00001e  0000              DCW      0x0000
                  |L6.32|
                          DCD      NoInit

                          AREA ||i.NFC_TX_Callback||, CODE, READONLY, ALIGN=1

                  NFC_TX_Callback PROC
;;;79     	
;;;80     void NFC_TX_Callback()	
000000  4770              BX       lr
;;;81     {
;;;82     
;;;83     }
;;;84     
                          ENDP


                          AREA ||i.main||, CODE, READONLY, ALIGN=2

                  main PROC
;;;19     
;;;20     int main(void)
000000  b51c              PUSH     {r2-r4,lr}
;;;21     {	
;;;22     	init_core_components();																					// initiate the key system components
000002  f7fffffe          BL       init_core_components
;;;23     	
;;;24     	NFC->OPCTRL = NFC_OPCTRL_OPERMODE_EEPRO;  
000006  4914              LDR      r1,|L8.88|
000008  2002              MOVS     r0,#2
00000a  7208              STRB     r0,[r1,#8]
;;;25     	
;;;26     	EINK_PINMODE_INIT();
00000c  f7fffffe          BL       EINK_PINMODE_INIT
;;;27     	xTaskCreate( (TaskFunction_t)osMain_task, "Main", 
000010  4812              LDR      r0,|L8.92|
000012  2109              MOVS     r1,#9
000014  9100              STR      r1,[sp,#0]
000016  9001              STR      r0,[sp,#4]
000018  2300              MOVS     r3,#0
00001a  2280              MOVS     r2,#0x80
00001c  a110              ADR      r1,|L8.96|
00001e  4812              LDR      r0,|L8.104|
000020  f7fffffe          BL       xTaskCreate
;;;28     	configMINIMAL_STACK_SIZE, NULL, 9, &Main_id );									// create the user's task	
;;;29     	osLaunchRTOS();																									// create key system tasks and launch the RTOS
000024  480d              LDR      r0,|L8.92|
000026  210b              MOVS     r1,#0xb
000028  3808              SUBS     r0,r0,#8
00002a  9100              STR      r1,[sp,#0]
00002c  9001              STR      r0,[sp,#4]
00002e  2300              MOVS     r3,#0
000030  2280              MOVS     r2,#0x80
000032  a10e              ADR      r1,|L8.108|
000034  480f              LDR      r0,|L8.116|
000036  f7fffffe          BL       xTaskCreate
00003a  4808              LDR      r0,|L8.92|
00003c  210a              MOVS     r1,#0xa
00003e  1f00              SUBS     r0,r0,#4
000040  9100              STR      r1,[sp,#0]
000042  9001              STR      r0,[sp,#4]
000044  2300              MOVS     r3,#0
000046  2280              MOVS     r2,#0x80
000048  a10b              ADR      r1,|L8.120|
00004a  480d              LDR      r0,|L8.128|
00004c  f7fffffe          BL       xTaskCreate
000050  f7fffffe          BL       vTaskStartScheduler
                  |L8.84|
;;;30     	while(1);																												// should never reach here
000054  e7fe              B        |L8.84|
;;;31     }
;;;32     
                          ENDP

000056  0000              DCW      0x0000
                  |L8.88|
                          DCD      0x40000300
                  |L8.92|
                          DCD      ||.data||+0xc
                  |L8.96|
000060  4d61696e          DCB      "Main",0
000064  00      
000065  00                DCB      0
000066  00                DCB      0
000067  00                DCB      0
                  |L8.104|
                          DCD      osMain_task
                  |L8.108|
00006c  53595343          DCB      "SYSCORE",0
000070  4f524500
                  |L8.116|
                          DCD      osSYSCORE_task
                  |L8.120|
000078  53595341          DCB      "SYSAUX",0
00007c  555800  
00007f  00                DCB      0
                  |L8.128|
                          DCD      osSYSAUX_task

                          AREA ||i.osMain_task||, CODE, READONLY, ALIGN=2

                  osMain_task PROC
;;;32     
;;;33     void osMain_task()																								// user's task
000000  2064              MOVS     r0,#0x64
;;;34     {  
;;;35     	vTaskDelay(100);
000002  f7fffffe          BL       vTaskDelay
;;;36     	GuitarBox_Off();
000006  f7fffffe          BL       GuitarBox_Off
;;;37     	while(1)																												
;;;38     	{		
;;;39     		switch(state)
00000a  4c19              LDR      r4,|L9.112|
                  |L9.12|
00000c  7820              LDRB     r0,[r4,#0]  ; state
00000e  2801              CMP      r0,#1
000010  d024              BEQ      |L9.92|
000012  2802              CMP      r0,#2
000014  d025              BEQ      |L9.98|
000016  2803              CMP      r0,#3
000018  d026              BEQ      |L9.104|
;;;40     		{
;;;41     			case 1:
;;;42     				MIC_TEST();
;;;43     			break;
;;;44     			case 2:
;;;45     				MusicLamp_V2();
;;;46     			break;			
;;;47     			case 3:
;;;48     				MusicLED_V2();			
;;;49     			break;	
;;;50     			default:
;;;51     				RGBLED_OFF;
00001a  2200              MOVS     r2,#0
00001c  4611              MOV      r1,r2
00001e  4610              MOV      r0,r2
000020  f7fffffe          BL       SPI_48SendData
;;;52     				GuitarBox_Off();
000024  f7fffffe          BL       GuitarBox_Off
                  |L9.40|
;;;53     			break;				
;;;54     		}	
;;;55     		
;;;56     		if(!KEY_STATE)
000028  2020              MOVS     r0,#0x20
00002a  f7fffffe          BL       GPIO_GET_PIN
00002e  2800              CMP      r0,#0
000030  d1ec              BNE      |L9.12|
;;;57     		{
;;;58     			RGBLED_OFF;
000032  2200              MOVS     r2,#0
000034  4611              MOV      r1,r2
000036  4610              MOV      r0,r2
000038  f7fffffe          BL       SPI_48SendData
;;;59     			GuitarBox_Off();
00003c  f7fffffe          BL       GuitarBox_Off
;;;60     			if(++state>3)
000040  7820              LDRB     r0,[r4,#0]  ; state
000042  1c40              ADDS     r0,r0,#1
000044  b2c0              UXTB     r0,r0
000046  7020              STRB     r0,[r4,#0]
000048  2803              CMP      r0,#3
00004a  d901              BLS      |L9.80|
;;;61     			{
;;;62     				state=0;
00004c  2000              MOVS     r0,#0
00004e  7020              STRB     r0,[r4,#0]
                  |L9.80|
;;;63     			}
;;;64     			while(!(KEY_STATE));
000050  2020              MOVS     r0,#0x20
000052  f7fffffe          BL       GPIO_GET_PIN
000056  2800              CMP      r0,#0
000058  d0fa              BEQ      |L9.80|
00005a  e7d7              B        |L9.12|
                  |L9.92|
00005c  f7fffffe          BL       MIC_TEST
000060  e7e2              B        |L9.40|
                  |L9.98|
000062  f7fffffe          BL       MusicLamp_V2
000066  e7df              B        |L9.40|
                  |L9.104|
000068  f7fffffe          BL       MusicLED_V2
00006c  e7dc              B        |L9.40|
;;;65     		}	
;;;66     	}
;;;67     }
;;;68     
                          ENDP

00006e  0000              DCW      0x0000
                  |L9.112|
                          DCD      ||.data||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  ucHeap
                          %        2048

                          AREA ||.data||, DATA, ALIGN=2

                  state
000000  01000000          DCB      0x01,0x00,0x00,0x00
                  SYSCORE_id
                          DCD      0x00000000
                  SYSAUX_id
                          DCD      0x00000000
                  Main_id
                          DCD      0x00000000

                          AREA NoInit, DATA, NOINIT, ALIGN=0

                  nfc_rx_buf
                          %        128
                  nfc_tx_buf
                          %        128

;*** Start embedded assembler ***

#line 1 "APP\\main.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_state____REV16|
#line 492 "C:\\Users\\bbb\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS\\5.6.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___6_main_c_state____REV16| PROC
#line 493

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_main_c_state____REVSH|
#line 507
|__asm___6_main_c_state____REVSH| PROC
#line 508

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

                  __ARM_use_no_argv EQU 0
